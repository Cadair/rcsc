* Setup

- Jupyter Lab

* Lessons
** Introduction to the Unix Shell                        :tobewritten:Stuart:
   DEADLINE: <2018-07-24 Tue>
   *1h20m*
*** TODO [#A] Unix Shell Content
    - Concepts of navigating dirs
    - concepts of commands and flags
    - which, less, cat, piping, etc
    - general tools for working with files
** Version Control with Git                                :swcmaterial:Drew:
   DEADLINE: <2018-07-24 Tue>
   *1h20m*
*** TODO [#C] Transscribe Git Content:
    - Creating a repo
    - Adding files and the staging area
    - Committing files
    - Diffs, logs and history
    - Ends with pulling the main material repo.
** Fundamentals of programming with Python parts I and II           :rewrite:
    *3h00*
    Notebook
    Use but heavily rewrite SWC content
*** Content:
**** TODO [#A] Intro to programming concepts I                       :Stuart:
   DEADLINE: <2018-07-24 Tue>
      + Variables
      + Sequences
      + Loops
      + Conditionals
**** TODO [#A] Intro to programming concepts II                        :Drew:
   DEADLINE: <2018-07-24 Tue>
      + Functions
      + Comments and docs
** Further Python                                              :tobewritten:
   *1h20*
*** Content:
**** TODO [#B] Explain how to write, edit, run a script
**** TODO [#B] Demonstrate modularity by importing from local scripts
**** TODO [#B] Lead into explaining namespaces and imports more generally
      + import 3rd-party things
      + modularity of functions
**** TODO [#B] Maybe very very basic intro to click?
** Writing effective tests                                     :tobewritten:
*1h20*
*** Content
**** TODO Exceptions and debugging
  + Reading tracebacks
  + common bugs
  + finding bugs
  + fixing bugs
  + Raising errors
**** TODO Silent errors
**** TODO running pytest
**** TODO writing tests
  + ensuring consistent output
  + ensuring correct output
  + modular functions
** Grand excercise 1 - approximating pi                             :rewrite:
*1h50*
*** Content:
**** TODO Write up good description of problem, including plot
**** TODO Stages of problem
- Implement algo in notebook
- Move algo to script, import into notebook, check it still works
- write tests for function, test function
- plot output in script
- (advanced) animate output
** [#A] Collaboration with Git parts I and II                  :tobrewritten:
*3h10*
*** Content:
**** TODO Part I
***** Get everyone on GitHub
***** Remotes and GitHub
***** Forks, forking and changing remotes
***** Pushing and pulling
***** Make a repo clone
**** TODO Part II
***** Partner up
***** A add, commit, push
***** B forks, clone, add remote, add, commit
***** A add, commit (make conflict), push
***** B pull, resolve conflict, push
***** PR, Concept of reviews
***** Merge, A pulls
** Python tools for astronomy
   *0h30*
*** Content:
**** TODO (Find someone to) write a talk on concepts of sunpy, astropy, contributing to OSS
** Units                                                            :review:
   *1h20*
*** Content:
**** TODO Go over existing notebook
***** Expand explanations and write-up
***** Update where necessary (eg kwargs to @quantity_input)
** Images and visualisation                                         :review:
   *1h20*
*** Content:
**** TODO Go over existing notebook
***** Update where necessary (eg scrap py2 compatibility)
** Images in astronomy
*** 
** Grand excercise 2 - ???
   *1h50*
*** 
programming excercise needs to be modular
script output at the end that does some analysis task
analysis should need some functions that cover material we've taught
- open some fits, do some processing?
A write fits reader, B combine files, 

shoud include some or all of
- image processing, array manipulation
- tabular data
- coordinates?

